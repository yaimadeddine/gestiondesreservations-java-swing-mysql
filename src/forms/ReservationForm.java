/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package forms;

import entities.Categorie;
import entities.Chambre;
import entities.Client;
import entities.Reservation;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import static java.lang.Integer.parseInt;
import java.text.MessageFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;
import service.CategorieService;
import service.ChambreService;
import service.ClientService;
import service.ReservationService;

/**
 *
 * @author yoaim
 */
public class ReservationForm extends javax.swing.JPanel {

    /**
     * Creates new form ClientForm
     */
    private DefaultTableModel model;
    private static int id;
    private ClientService clientService;
    private ChambreService chambreService;
    private ReservationService reservationService;

    public ReservationForm() {
        initComponents();
        btnBackground();
        clientService = new ClientService();
        chambreService = new ChambreService();
        reservationService = new ReservationService();
        model = (DefaultTableModel) reservationList.getModel();
        load();
        loadList();
    }

    private void loadList() {
        for (Client c : clientService.findAll()) {
            listClient.addItem(c);
        }
        for (Chambre c : chambreService.findAll()) {
            listChambre.addItem(c);
        }

    }

    private void load() {
        model.setRowCount(0);
        reservationService.findAll().stream().forEach((r) -> {
            model.addRow(new Object[]{r.getId(), r.getClient(), r.getChambre(), r.getDatedebut(), r.getDatefin()});
        });
    }

    private void btnBackground() {
        JButton[] jButtons = {ajouterbtn, modifierbtn, supprimerbtn, pdfbtn};
        for (JButton btn : jButtons) {
            btn.setBackground(new Color(21, 25, 28));
            btn.setUI(new BasicButtonUI());
            btn.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    btn.setBackground(new Color(229, 229, 203));
                    btn.setForeground(Color.BLACK);

                }

                @Override
                public void mouseExited(MouseEvent e) {
                    btn.setBackground(new Color(21, 25, 28));
                    btn.setForeground(new Color(255, 255, 255));
                }
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reservationList = new table.Table();
        ajouterbtn = new javax.swing.JButton();
        supprimerbtn = new javax.swing.JButton();
        modifierbtn = new javax.swing.JButton();
        listClient = new combobox.Combobox();
        listChambre = new combobox.Combobox();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pdfbtn = new javax.swing.JButton();

        jButton6.setBackground(new java.awt.Color(21, 25, 28));
        jButton6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Statistique");
        jButton6.setPreferredSize(new java.awt.Dimension(150, 40));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        setPreferredSize(new java.awt.Dimension(800, 550));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        reservationList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Client", "Chambre", "Date debut", "Date fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reservationList.setToolTipText("");
        reservationList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservationListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(reservationList);
        if (reservationList.getColumnModel().getColumnCount() > 0) {
            reservationList.getColumnModel().getColumn(0).setMinWidth(60);
            reservationList.getColumnModel().getColumn(0).setPreferredWidth(60);
            reservationList.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        ajouterbtn.setBackground(new java.awt.Color(21, 25, 28));
        ajouterbtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        ajouterbtn.setForeground(new java.awt.Color(255, 255, 255));
        ajouterbtn.setText("Ajouter");
        ajouterbtn.setPreferredSize(new java.awt.Dimension(150, 40));
        ajouterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterbtnActionPerformed(evt);
            }
        });

        supprimerbtn.setBackground(new java.awt.Color(21, 25, 28));
        supprimerbtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        supprimerbtn.setForeground(new java.awt.Color(255, 255, 255));
        supprimerbtn.setText("Annuler");
        supprimerbtn.setPreferredSize(new java.awt.Dimension(150, 40));
        supprimerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerbtnActionPerformed(evt);
            }
        });

        modifierbtn.setBackground(new java.awt.Color(21, 25, 28));
        modifierbtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        modifierbtn.setForeground(new java.awt.Color(255, 255, 255));
        modifierbtn.setText("Modifier");
        modifierbtn.setPreferredSize(new java.awt.Dimension(150, 40));
        modifierbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierbtnActionPerformed(evt);
            }
        });

        listClient.setLabeText("Client");

        listChambre.setLabeText("Chambre");

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));

        jDateChooser2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Date debut");

        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Date fin");

        jPanel2.setBackground(new java.awt.Color(21, 25, 28));
        jPanel2.setPreferredSize(new java.awt.Dimension(100, 40));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        pdfbtn.setBackground(new java.awt.Color(21, 25, 28));
        pdfbtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        pdfbtn.setForeground(new java.awt.Color(255, 255, 255));
        pdfbtn.setText("PDF");
        pdfbtn.setPreferredSize(new java.awt.Dimension(150, 40));
        pdfbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listClient, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listChambre, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ajouterbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modifierbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supprimerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98))))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pdfbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(ajouterbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listClient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(modifierbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supprimerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(listChambre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(pdfbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ajouterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterbtnActionPerformed
        // TODO add your handling code here:
        Chambre chambre = (Chambre) listChambre.getSelectedItem();
        Client client = (Client) listClient.getSelectedItem();
        Date dateDebut = jDateChooser1.getDate();
        Date dateFin = jDateChooser2.getDate();

        if (reservationService.create(new Reservation(chambre, client, new Date(dateDebut.getTime()), new Date(dateFin.getTime())))) {
            this.load();
            JOptionPane.showMessageDialog(this, "Reservation bien ajouter");
        } else {
            JOptionPane.showMessageDialog(this, "Reservation non ajouter");
        }
    }//GEN-LAST:event_ajouterbtnActionPerformed

    private void supprimerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerbtnActionPerformed
        // TODO add your handling code here:
  int answer=JOptionPane.showConfirmDialog(this, "Etes vous sur de supprimer cette chambre?");
        if(answer==0)
           if(reservationService.delete(reservationService.findById(id)))
           {
               JOptionPane.showMessageDialog(this,"Réservation annuler");
                            load();

           }
    }//GEN-LAST:event_supprimerbtnActionPerformed

    private void modifierbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierbtnActionPerformed
        // TODO add your handling code here:
        Date dateDebut = jDateChooser1.getDate();
        Date dateFin = jDateChooser2.getDate();
        Client client = (Client) listClient.getSelectedItem();
        Chambre chambre = (Chambre) listChambre.getSelectedItem();
        int answer=JOptionPane.showConfirmDialog(this, "Etes vous sur de modifier cette chambre?");
         if(answer==0){
             if(reservationService.update(new Reservation(id,chambre,client,new Date(dateDebut.getTime()),new Date(dateFin.getTime())))){
                 JOptionPane.showMessageDialog(this,"Chambre modifié");
                            load();
             }
         }
    }//GEN-LAST:event_modifierbtnActionPerformed

    private void reservationListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservationListMouseClicked
        // TODO add your handling code here:
         id=parseInt(model.getValueAt(reservationList.getSelectedRow(),0).toString());
        listClient.getModel().setSelectedItem(model.getValueAt(reservationList.getSelectedRow(),1));
        listChambre.getModel().setSelectedItem(model.getValueAt(reservationList.getSelectedRow(),2));
        //telephonetxt.setText(model.getValueAt(listChambre.getSelectedRow(),1).toString());
        //jDateChooser1.getDate(model.getValueAt(reservationList.getSelectedRow(),3));
        
    }//GEN-LAST:event_reservationListMouseClicked

    private void pdfbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfbtnActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Liste des réservations");
        MessageFormat footer = new MessageFormat("");

        try {
            reservationList.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(ReservationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pdfbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouterbtn;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private combobox.Combobox listChambre;
    private combobox.Combobox listClient;
    private javax.swing.JButton modifierbtn;
    private javax.swing.JButton pdfbtn;
    private table.Table reservationList;
    private javax.swing.JButton supprimerbtn;
    // End of variables declaration//GEN-END:variables
}
